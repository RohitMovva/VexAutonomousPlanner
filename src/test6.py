import numpy as np
from bisect import bisect_left

def get_times(velocities, dd):
    res = [0]
    curr_t = 0
    prev_v = 0
    for i in range(1, len(velocities)):
        current_dt = 0
        curr_accel = (velocities[i] ** 2 - prev_v**2) / (dd * 2)  # CORRECT FORMULA
        if abs(curr_accel) > 1e-5:
            current_dt = (velocities[i] - prev_v) / curr_accel
        elif abs(prev_v) > 1e-5:
            current_dt = dd / velocities[i]
        curr_t += current_dt
        prev_v = velocities[i]
        res.append(curr_t)
    return res

def interpolate_velocity(velocities, times, tt):
    place = bisect_left(times, tt)
    if place == 0:
        return 0
    if place >= len(times):
        return velocities[-1]
        
    new_velo = np.interp(
        tt, 
        [times[place - 1], times[place]], 
        [velocities[place - 1], velocities[place]]
    )
    
    # Debug output
    print(f"\nInterpolation at t={tt:.4f}:")
    print(f"Between times: [{times[place - 1]:.4f}, {times[place]:.4f}]")
    print(f"Between velocities: [{velocities[place - 1]:.4f}, {velocities[place]:.4f}]")
    print(f"Interpolated velocity: {new_velo:.4f}")
    
    # Validation check
    if new_velo > max(velocities[place - 1], velocities[place]) + 1e-10 or \
       new_velo < min(velocities[place - 1], velocities[place]) - 1e-10:
        print(f"WARNING: Interpolated velocity {new_velo:.6f} outside bounds [{velocities[place - 1]:.6f}, {velocities[place]:.6f}]")
        print(f"Interpolation factor: {(tt - times[place - 1]) / (times[place] - times[place - 1]):.6f}")
        
    return new_velo

def run_test_case(velocities, dd, dt, name):
    print(f"\nTest Case {name}")
    
    time_stamps = get_times(velocities, dd)
    path_time = time_stamps[-1]
    time_steps = int(path_time / dt) + 1
    
    print(f"Time stamps: {time_stamps}")
    
    new_velocities = []
    for i in range(time_steps):
        new_velo = interpolate_velocity(velocities, time_stamps, i * dt)
        new_velocities.append(new_velo)
    new_velocities.append(0)
    
    return new_velocities, time_stamps

if __name__ == "__main__":
    # Test Case 1: Simple increasing velocities
    test1_params = {
        'velocities': [0, 1, 2, 3, 4],
        'dd': 1.0,
        'dt': 0.1,
        'name': "1: Simple increasing velocities"
    }
    
    # Test Case 2: Velocities with small variations
    test2_params = {
        'velocities': [3.4924, 3.4930, 3.4935, 3.4925, 3.4928],
        'dd': 0.0005,
        'dt': 0.0001,
        'name': "2: Velocities with small variations"
    }

    test3_params = {
        'velocities': [0, 0.21213203435596426, 0.3, 0.3674234614174767, 0.4242640687119285, 0.4743416490252569, 0.5196152422706631, 0.5612486080160911, 0.5999999999999999, 0.6363961030678926, 0.6708203932499367, 0.7035623639735142, 0.7348469228349532, 0.7648529270389176, 0.7937253933193771, 0.8215838362577491, 0.848528137423857, 0.8746427842267951, 0.9, 0.9246621004453465, 0.9486832980505138, 0.972111104761179, 0.99498743710662, 1.0173494974687902, 1.0392304845413263, 1.0606601717798212, 1.0816653826391966, 1.10227038425243, 1.1224972160321822, 1.142365965879586, 1.1618950038622247, 1.181101181101771, 1.1999999999999995, 1.2186057606953935, 1.2369316876852976, 1.2549900398011127, 1.2727922061357848, 1.2903487900563932, 1.3076696830622012, 1.3247641299491761, 1.341640786499873, 1.3583077707206115, 1.374772708486751, 1.3910427743243545, 1.4071247279470278, 1.4230249470757697, 1.4387494569938146, 1.4543039572248975, 1.4696938456699056, 1.4849242404917484, 1.4999999999999987, 1.5149257407543104, 1.529705854077834, 1.5443445211480487, 1.5588457268119882, 1.573213272255226, 1.587450786638753, 1.6015617378046954, 1.61554944214035, 1.6294170736800313, 1.6431676725154973, 1.656804152578088, 1.6703293088490054, 1.6837458240482723, 1.6970562748477127, 1.7102631376487056, 1.7233687939614073, 1.7363755354185324, 1.7492855684535888, 1.7621010186706083, 1.7748239349298836, 1.7874562931719464, 1.7999999999999987, 1.8124568960391845, 1.8248287590894645, 1.837117307087382, 1.8493242008906914, 1.861451046898627, 1.873499399519518, 1.8854707634964787, 1.8973665961010262, 1.909188309203677, 1.9209372712298534, 1.9326148090087676, 1.944222209522357, 1.9557607215607935, 1.9672315572905992, 1.978635893740937, 1.989974874213239, 2.001249609618949, 2.0124611797498098, 2.0236106344848053, 2.0346989949375796, 2.0457272545478773, 2.056696380120312, 2.067607312813532, 2.0784609690826517, 2.089258241577617, 2.099999999999999, 2.1106870919205423, 2.1213203435596415, 2.131900560532783, 2.142428528562854, 2.1529050141610977, 2.163330765278393, 2.173706511928415, 2.1840329667841547, 2.1943108257491684, 2.2045407685048595, 2.2147234590350093, 2.224859546128698, 2.2349496638627, 2.244994432064364, 2.2549944567559352, 2.264950330581224, 2.2748626332154642, 2.2847319317591714, 2.294558781116752, 2.3043437243605815, 2.314087293081226, 2.3237900077244493, 2.333452377915606, 2.343074902771995, 2.352658071203717, 2.362202362203542, 2.371708245126283, 2.38117617995813, 2.390606617576383, 2.399999999999999, 2.4093567606313506, 2.418677324489564, 2.427962108435796, 2.437211521390787, 2.4464259645450124, 2.455605831561734, 2.4647515087732463, 2.473863375370595, 2.482941803587026, 2.491987158875421, 2.500999800079959, 2.5099800796022254, 2.5189283435619987, 2.5278449319529064, 2.5367301787931633, 2.54558441227157, 2.5544079548889593, 2.5632011235952588, 2.571964229922336, 2.5806975801127874, 2.58940147524481, 2.5980762113533156, 2.606722079547415, 2.6153393661244038, 2.6239283526803847, 2.632489316217636, 2.641022529248851, 2.6495282598983536, 2.658006772000402, 2.666458325194676, 2.6748831750190507, 2.6832815729997472, 2.6916537667389537, 2.6999999999999997, 2.7083205127901677, 2.7166155414412243, 2.724885318687742, 2.7331300737432893, 2.741350032374559, 2.7495454169735036, 2.757716446627535, 2.7658633371878656, 2.7739863013360386, 2.7820855486487104, 2.7901612856607403, 2.7982137159266434, 2.8062430400804548, 2.8142494558940565, 2.8222331583340154, 2.83019433961698, 2.8381331892636736, 2.8460498941515397, 2.8539446385660656, 2.8618176042508354, 2.869668970456347, 2.8774989139876306, 2.8853076092507006, 2.8930952282978852, 2.900861940872056, 2.908607914449796, 2.9163333142835355, 2.9240383034426873, 2.931723042853808, 2.939387691339812, 2.9470324056582733, 2.9546573405388297, 2.9622626487197232, 2.9698484809834977, 2.9774149861918793, 2.984962311319858, 2.9924906014889983, 2.999999999999998, 3.007490648364511, 3.014962686336265, 3.022416251941481, 3.0298514815086217, 3.037268509697486, 3.044667469527664, 3.0520484924063687, 3.0594117081556687, 3.066757245039129, 3.074085229787878, 3.0813957876261187, 3.088689042296098, 3.0959651160825423, 3.1032241298365784, 3.1104662029991563, 3.1176914536239773, 3.124899998399947, 3.132091952673163, 3.1392674304684505, 3.1464265445104527, 3.153569406244294, 3.1606961258558197, 3.1678068122914294, 3.1749015732775066, 3.1819805153394616, 3.1890437438203927, 3.196091362899375, 3.2031234756093907, 3.210140183854902, 3.21714158842908, 3.224127789030699, 3.2310988842807, 3.2380549717384333, 3.244996147917588, 3.2519225083018175, 3.2588341473600626, 3.265731158561584, 3.272613634390712, 3.2794816663613147, 3.2863353450309942, 3.29317476001502, 3.2999999999999976, 3.306811152757288, 3.3136083051561758, 3.320391543176796, 3.327160951922823, 3.333916615633928, 3.340658617698011, 3.3473870406632074, 3.3541019662496825, 3.3608034753612097, 3.367491648096545, 3.3741665637605958, 3.3808283008753914, 3.387476937190862, 3.394112549695426, 3.400735214626388, 3.4073450074801617, 3.41394200302231, 3.4205262752974113, 3.427097897638756, 3.4336569426778762, 3.4402034823539114, 3.446737587922814, 3.4532593299663983, 3.4597687784012354, 3.4662660024873997, 3.4727510708370644, 3.4792240514229573, 3.4856850115866718, 3.492134018046841, 3.4985711369071764, 3.5049964336643726, 3.5114099732158834, 3.517811819867568, 3.5242020373412153, 3.530580688781942, 3.536947836765475, 3.5433035433053113, 3.5496478698597658, 3.5559808773389054, 3.562302626111371, 3.5686131760110915, 3.574912586343891, 3.581200915893992, 3.587478222930415, 3.593744565213277, 3.599804554771628, 3.593548779765562, 3.587282095480443, 3.581004444643229, 3.574715769477982, 3.5684160116996675, 3.56210511250785, 3.55578301258029, 3.5494496520664387, 3.543104970580827, 3.536748907196348, 3.530381400437432, 3.5240023882731073, 3.517611808109952, 3.5112095967849264, 3.504795690558091, 3.498370025105201, 3.4919325355101813, 3.485483156257474, 3.479021821224259, 3.4725484636725463, 3.4660630162411303, 3.4595654109374148, 3.453055579129094, 3.446533451535697, 3.4399989582199826, 3.4334520285791914, 3.426892591336146, 3.4203205745301952, 3.413735905508006, 3.4071385109141903, 3.400528316681772, 3.393905248022485, 3.387269229416901, 3.380620184604382, 3.3739580365728568, 3.3672827075484126, 3.3605941189847024, 3.3538921915521627, 3.3471768451270347, 3.340447998780189, 3.3337055707657464, 3.3269494785094906, 3.3201796385970703, 3.313395966761983, 3.3065983778733354, 3.2997867859233834, 3.292961104014831, 3.2861212443478975, 3.2792671182071422, 3.2723986359480373, 3.26551570698329, 3.2586182397689014, 3.251706141789964, 3.244779319546181, 3.237837678537109, 3.2308811232471206, 3.2239095571300656, 3.2169228825936402, 3.209921000983447, 3.202903812566743, 3.1958712165158625, 3.188823110891317, 3.181759392624555, 3.1746799575003743, 3.1675847001389843, 3.1604735139777045, 3.153346291252291, 3.146202922977884, 3.139043298929561, 3.131867307622496, 3.124674836291703, 3.117465770871363, 3.110239995973716, 3.1029973948675145, 3.0957378494560195, 3.088461240254535, 3.081167446367461, 3.0738563454648595, 3.066527813758516, 3.059181725977485, 3.051817955343107, 3.044436373543481, 3.037036850707377, 3.0296192553775767, 3.022183454483626, 3.01472931331398, 3.0072566954875306, 2.9997654629244903, 2.9922554758166258, 2.9847265925968127, 2.9771786699079015, 2.9696115625708663, 2.9620251235522264, 2.954419203930712, 2.946793652863156, 2.9391483175495896, 2.9314830431975185, 2.9237976729853563, 2.9160920480249906, 2.9083660073234565, 2.9006193877436908, 2.8928520239643407, 2.8850637484385993, 2.877254391352037, 2.869423780579401, 2.861571741640349, 2.8536980976540915, 2.8458026692928975, 2.8378852747344423, 2.8299457296129513, 2.8219838469691103, 2.8139994371986963, 2.805992307999895, 2.7979622643192634, 2.7899091082962864, 2.7818326392064963, 2.7737326534030964, 2.7656089442570475, 2.757461302095567, 2.7492895141389857, 2.7410933644359106, 2.732872633796639, 2.724627099724764, 2.7163565363469093, 2.7080607143405366, 2.699739400859753, 2.691392359459055, 2.6830193500149377, 2.6746201286452957, 2.6661944476265376, 2.657742055308336, 2.64926269602593, 2.6407561100098924, 2.6322220332932744, 2.623660197616029, 2.6150703303266205, 2.606452154280715, 2.597805387736845, 2.5891297442489396, 2.5804249325556015, 2.5716906564660107, 2.5629266147423304, 2.554132500978479, 2.5453080034751356, 2.5364528051108266, 2.527566583208953, 2.5186490094005913, 2.50969974948291, 2.500725848665665, 2.4918792175848354, 2.4831731569098845, 2.4746078992990976, 2.4661892161720615, 2.4579231991493895, 2.44981599430636, 2.441873798480869, 2.434102855599517, 2.4265161578162164, 2.419123532777646, 2.4119230913113316, 2.404921270436348, 2.3981245335261057, 2.3915393670177996, 2.385172277282683, 2.379053796616124, 2.373169547757937, 2.3675251907356993, 2.3621272994551665, 2.3569824511920086, 2.352103021008329, 2.34751834565584, 2.3432087363632714, 2.3391807630036316, 2.335440989084568, 2.3319959717392953, 2.3288889560943424, 2.3260975527592698, 2.323622778313082, 2.321471140948416, 2.3196491453205876, 2.3182088808755807, 2.3171179317271733, 2.3163782241854287, 2.315996231934254, 2.3159904890983976, 2.3164010300571505, 2.3171906986343584, 2.318365996977516, 2.3199334658725257, 2.3219450987664207, 2.324380941528719, 2.3272304791141334, 2.3305004314891216, 2.33422393253137, 2.338423484819866, 2.343065507868266, 2.348157090618134, 2.3537184206503285, 2.3598024691654342, 2.3663593330477615, 2.373396736634383, 2.3809277825347417, 2.3890242264114874, 2.397626611401196, 2.4067436566538523, 2.416074301184373, 2.425369050030027, 2.43462831431074, 2.4438524973581273, 2.453041994920502, 2.462197195360996, 2.4713184798490775, 2.4804062225457257, 2.4894607907825255, 2.4984825452349186, 2.507471840089846, 2.5164290232079978, 2.525354436280887, 2.5342484149829425, 2.543111289118814, 2.5519433827660745, 2.560745014413492, 2.569516497095038, 2.5782581385197942, 2.5869702411979065, 2.5956531025627356, 2.6043070150893413, 2.6129322664094365, 2.621529139422935, 2.6300979124062196, 2.6323127707804193, 2.6237512311981273, 2.6151616629213748, 2.6065437888540623, 2.5978973273040817, 2.5892219918758785, 2.5805174913597644, 2.571783529617859, 2.5630198054665305, 2.554226012555211, 2.5454018392414373, 2.536546968461986, 2.5276610775999404, 2.5187438383475387, 2.509794916564637, 2.500813972132612, 2.4918006588035273, 2.4827546240443685, 2.473675508876153, 2.4645629477077056, 2.4554165681638818, 2.4463431743193524, 2.437759512179327, 2.4296485373717647, 2.422002525944295, 2.4148387991249836, 2.408162920558264, 2.40192943136459, 2.396131455150599, 2.390762288929302, 2.3858650131752697, 2.381392838204585, 2.3773291154727025, 2.3736676194710884, 2.3704098986952427, 2.367590181519445, 2.3651532091869596, 2.363093022203797, 2.361403716152632, 2.360093559440217, 2.3591788135404617, 2.358615883193582, 2.3583989517916404, 2.3585222217683817, 2.3589887162989918, 2.359819379751773, 2.3609711214607976, 2.3624381311329588, 2.364214597567468, 2.3662947057874475, 2.3687036909913886, 2.371409689805317, 2.37439991245371, 2.377668489758505, 2.381209544122784, 2.385018857019557, 2.389116965571471, 2.393467932658293, 2.3980658466063827, 2.402904792532857, 2.407978853628188, 2.4132821127011224, 2.4188247533196217, 2.424588985187547, 2.4305628663956456, 2.436740522003715, 2.4431160909907708, 2.4496837289712134, 2.456437611051243, 2.4633801345943267, 2.4705016487142806, 2.477790526483129, 2.485241093799732, 2.4928477141250815, 2.500604791700483, 2.5085067747871825, 2.5165481589127587, 2.524724128841123, 2.53303379338558, 2.541465503222736, 2.5500140279762404, 2.558674201280451, 2.567440923621971, 2.5761896079847926, 2.5849086823887686, 2.593598445459289, 2.602259190835694, 2.610891207287052, 2.6194947788245044, 2.628070184810299, 2.6366177000636326, 2.645137594963415, 2.6536301355480645, 2.6620955836124365, 2.670534196801988, 2.6789462287042713, 2.6873319289378523, 2.695691543238736, 2.70402531354439, 2.7123334780754442, 2.7206162714151434, 2.72887392458663, 2.7371066651281306, 2.7453147171661096, 2.753498301486463, 2.761657635603812, 2.7697929338289597, 2.7779044073345713, 2.7859922642191304, 2.794056709569231, 2.8020979455202557, 2.810116171315492, 2.8181115833637316, 2.8260843752954083, 2.8340347380173094, 2.841962859765912, 2.8498689261593837, 2.85775312024829, 2.865615622565043, 2.873456611172133, 2.8812762617091816, 2.8890747474388467, 2.8968522392916136, 2.9046089059095093, 2.912344913688768, 2.920060426821479, 2.927755607336247, 2.935430615137894, 2.943085608046228, 2.950720741833906, 2.9583361702634194, 2.9659320451232247, 2.9735085162630415, 2.981065731628344, 2.988603837294069, 2.996122977497558, 3.0036232946707604, 3.0111049294717103, 3.0185680208153056, 3.026012705903402, 3.0334391202542417, 3.0408473977312354, 3.0482376705711163, 3.0556100694114794, 3.0629647233177244, 3.0703017598094204, 3.0776213048861005, 3.084923483052509, 3.092208417343311, 3.0994762293472786, 3.1067270392309694, 3.1139609657619065, 3.121178126331278, 3.1283786369761617, 3.135562612401294, 3.142730166000388, 3.1498814098770174, 3.157016454865072, 3.1641354105488, 3.1712383852824475, 3.1783254862094954, 3.1853968192815203, 3.192452489276673, 3.199492599817794, 3.206517253390168, 3.2135265513589313, 3.2205205939861377, 3.227499480447491, 3.234463308848753, 3.2414121762418344, 3.248346178640575, 3.2552654110362225, 3.262169967412616, 3.2690599407610788, 3.2759354230950324, 3.2827965054643315, 3.289643277969334, 3.2964758297747045, 3.303294249122961, 3.310098623347774, 3.316889038887015, 3.3236655812955713, 3.3304283352579183, 3.3371773846004693, 3.3439128123036985, 3.3506347005140427, 3.3573431305555927, 3.364038182941571, 3.3707199373856067, 3.3773884728128074, 3.3840438673706386, 3.390686198439606, 3.3973155426437547, 3.403931975860979, 3.4105355732331586, 3.417126409176112, 3.423704557389383, 3.430270090865853, 3.436823081901195, 3.443363602103157, 3.449891722400694, 3.4564075130529424, 3.4629110436580417, 3.4694023831618073, 3.4758815998662596, 3.4823487614380078, 3.488803934916496, 3.49524718672211, 3.501678582664152, 3.508098187948682, 3.5145060671862307, 3.5209022843993876, 3.527286903030263, 3.533659985947831, 3.54002159545515, 3.5463717932964705, 3.5527106406642273, 3.5590381982059176, 3.5653545260308723, 3.5716596837169168, 3.577953730316929, 3.5842367243652906, 3.5905087238842395, 3.5967697863901202, 3.6030199688995386, 3.609259327935419, 3.6154879195329688, 3.6217057992455484, 3.6279130221504534, 3.6341096428546065, 3.6311155310730565, 3.6249137920783667, 3.6187014245444407, 3.6124783736376838, 3.6062445840513875, 3.599999999999995, 3.593744565213277, 3.587478222930415, 3.581200915893992, 3.574912586343891, 3.5686131760110915, 3.562302626111371, 3.5559808773389054, 3.5496478698597658, 3.5433035433053113, 3.536947836765475, 3.530580688781942, 3.5242020373412153, 3.517811819867568, 3.5114099732158834, 3.5049964336643726, 3.4985711369071764, 3.492134018046841, 3.4856850115866718, 3.4792240514229573, 3.4727510708370644, 3.4662660024873997, 3.4597687784012354, 3.4532593299663983, 3.446737587922814, 3.4402034823539114, 3.4336569426778762, 3.427097897638756, 3.4205262752974113, 3.41394200302231, 3.4073450074801617, 3.400735214626388, 3.394112549695426, 3.387476937190862, 3.3808283008753914, 3.3741665637605958, 3.367491648096545, 3.3608034753612097, 3.3541019662496825, 3.3473870406632074, 3.340658617698011, 3.333916615633928, 3.327160951922823, 3.320391543176796, 3.3136083051561758, 3.306811152757288, 3.2999999999999976, 3.29317476001502, 3.2863353450309942, 3.2794816663613147, 3.272613634390712, 3.265731158561584, 3.2588341473600626, 3.2519225083018175, 3.244996147917588, 3.2380549717384333, 3.2310988842807, 3.224127789030699, 3.21714158842908, 3.210140183854902, 3.2031234756093907, 3.196091362899375, 3.1890437438203927, 3.1819805153394616, 3.1749015732775066, 3.1678068122914294, 3.1606961258558197, 3.153569406244294, 3.1464265445104527, 3.1392674304684505, 3.132091952673163, 3.124899998399947, 3.1176914536239773, 3.1104662029991563, 3.1032241298365784, 3.0959651160825423, 3.088689042296098, 3.0813957876261187, 3.074085229787878, 3.066757245039129, 3.0594117081556687, 3.0520484924063687, 3.044667469527664, 3.037268509697486, 3.0298514815086217, 3.022416251941481, 3.014962686336265, 3.007490648364511, 2.999999999999998, 2.9924906014889983, 2.984962311319858, 2.9774149861918793, 2.9698484809834977, 2.9622626487197232, 2.9546573405388297, 2.9470324056582733, 2.939387691339812, 2.931723042853808, 2.9240383034426873, 2.9163333142835355, 2.908607914449796, 2.900861940872056, 2.8930952282978852, 2.8853076092507006, 2.8774989139876306, 2.869668970456347, 2.8618176042508354, 2.8539446385660656, 2.8460498941515397, 2.8381331892636736, 2.83019433961698, 2.8222331583340154, 2.8142494558940565, 2.8062430400804548, 2.7982137159266434, 2.7901612856607403, 2.7820855486487104, 2.7739863013360386, 2.7658633371878656, 2.757716446627535, 2.7495454169735036, 2.741350032374559, 2.7331300737432893, 2.724885318687742, 2.7166155414412243, 2.7083205127901677, 2.6999999999999997, 2.6916537667389537, 2.6832815729997472, 2.6748831750190507, 2.666458325194676, 2.658006772000402, 2.6495282598983536, 2.641022529248851, 2.632489316217636, 2.6239283526803847, 2.6153393661244038, 2.606722079547415, 2.5980762113533156, 2.58940147524481, 2.5806975801127874, 2.571964229922336, 2.5632011235952588, 2.5544079548889593, 2.54558441227157, 2.5367301787931633, 2.5278449319529064, 2.5189283435619987, 2.5099800796022254, 2.500999800079959, 2.491987158875421, 2.482941803587026, 2.473863375370595, 2.4647515087732463, 2.455605831561734, 2.4464259645450124, 2.437211521390787, 2.427962108435796, 2.418677324489564, 2.4093567606313506, 2.399999999999999, 2.390606617576383, 2.38117617995813, 2.371708245126283, 2.362202362203542, 2.352658071203717, 2.343074902771995, 2.333452377915606, 2.3237900077244493, 2.314087293081226, 2.3043437243605815, 2.294558781116752, 2.2847319317591714, 2.2748626332154642, 2.264950330581224, 2.2549944567559352, 2.244994432064364, 2.2349496638627, 2.224859546128698, 2.2147234590350093, 2.2045407685048595, 2.1943108257491684, 2.1840329667841547, 2.173706511928415, 2.163330765278393, 2.1529050141610977, 2.142428528562854, 2.131900560532783, 2.1213203435596415, 2.1106870919205423, 2.099999999999999, 2.089258241577617, 2.0784609690826517, 2.067607312813532, 2.056696380120312, 2.0457272545478773, 2.0346989949375796, 2.0236106344848053, 2.0124611797498098, 2.001249609618949, 1.989974874213239, 1.978635893740937, 1.9672315572905992, 1.9557607215607935, 1.944222209522357, 1.9326148090087676, 1.9209372712298534, 1.909188309203677, 1.8973665961010262, 1.8854707634964787, 1.873499399519518, 1.861451046898627, 1.8493242008906914, 1.837117307087382, 1.8248287590894645, 1.8124568960391845, 1.7999999999999987, 1.7874562931719464, 1.7748239349298836, 1.7621010186706083, 1.7492855684535888, 1.7363755354185324, 1.7233687939614073, 1.7102631376487056, 1.6970562748477127, 1.6837458240482723, 1.6703293088490054, 1.656804152578088, 1.6431676725154973, 1.6294170736800313, 1.61554944214035, 1.6015617378046954, 1.587450786638753, 1.573213272255226, 1.5588457268119882, 1.5443445211480487, 1.529705854077834, 1.5149257407543104, 1.4999999999999987, 1.4849242404917484, 1.4696938456699056, 1.4543039572248975, 1.4387494569938146, 1.4230249470757697, 1.4071247279470278, 1.3910427743243545, 1.374772708486751, 1.3583077707206115, 1.341640786499873, 1.3247641299491761, 1.3076696830622012, 1.2903487900563932, 1.2727922061357848, 1.2549900398011127, 1.2369316876852976, 1.2186057606953935, 1.1999999999999995, 1.181101181101771, 1.1618950038622247, 1.142365965879586, 1.1224972160321822, 1.10227038425243, 1.0816653826391966, 1.0606601717798212, 1.0392304845413263, 1.0173494974687902, 0.99498743710662, 0.972111104761179, 0.9486832980505138, 0.9246621004453465, 0.9, 0.8746427842267951, 0.848528137423857, 0.8215838362577491, 0.7937253933193771, 0.7648529270389176, 0.7348469228349532, 0.7035623639735142, 0.6708203932499367, 0.6363961030678926, 0.5999999999999999, 0.5612486080160911, 0.5196152422706631, 0.4743416490252569, 0.4242640687119285, 0.3674234614174767, 0.3, 0.21213203435596426, 0],
        'dd': 0.005,
        'dt': 0.025,
        'name': "3: Actual data"
    }
    # Run test cases
    test1_results = run_test_case(**test1_params)
    test2_results = run_test_case(**test2_params)
    test3_results = run_test_case(**test3_params)
    
    test_cases = [
        (test1_results[0], test1_results[1], test1_params['velocities'], test1_params['dt'], "1"),
        (test2_results[0], test2_results[1], test2_params['velocities'], test2_params['dt'], "2"),
        (test3_results[0], test3_results[1], test3_params['velocities'], test3_params['dt'], "3")
    ]
    
    # Additional validation
    print("\nValidation Results:")
    for new_velocities, time_stamps, orig_velocities, dt, test_num in test_cases:
        violations = 0
        max_violation = 0
        print(f"\nTest {test_num}:")
        
        for i in range(len(new_velocities) - 1):  # Exclude last point which is always 0
            # Find which segment in original velocities this point belongs to
            t = i * dt
            place = bisect_left(time_stamps, t)
            if place == 0 or place >= len(orig_velocities):
                continue
                
            v_min = min(orig_velocities[place-1], orig_velocities[place])
            v_max = max(orig_velocities[place-1], orig_velocities[place])
            
            if new_velocities[i] > v_max + 1e-10 or new_velocities[i] < v_min - 1e-10:
                violations += 1
                violation_amount = max(new_velocities[i] - v_max, v_min - new_velocities[i])
                max_violation = max(max_violation, abs(violation_amount))
                print(f"Violation at t={t:.6f}: v={new_velocities[i]:.6f}, bounds=[{v_min:.6f}, {v_max:.6f}]")
        
        print(f"Total violations: {violations}")
        print(f"Maximum violation amount: {max_violation:.10f}")